apply plugin: 'com.android.application'

def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/keystore.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

def versionProps = new Properties()
def versionPropsFile = rootProject.file('version.properties')
if (versionPropsFile.exists()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.potato.timetable"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode versionProps['versionCode'].toInteger()
        versionName versionProps['versionName']
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // 签名
    signingConfigs {
        release {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
//        debug {
//            shrinkResources true
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }

    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
//    android.applicationVariants.all {
//        variant ->
//            variant.outputs.all {
//                //在这里修改apk文件名
//                outputFileName = "LightTimetable-v${variant.versionName}-${buildTime()}.apk"
//            }
//    }
}

def static buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd', TimeZone.getTimeZone("GMT+08:00"))
    return formattedDate
}
//
//def static createReleaseVersion(int versioncode, String name) {
//    File file = new File(".\\app\\release", "version.json")
//    BufferedWriter bw = new BufferedWriter(new FileWriter(file))
//    bw.write("{" +
//            "\"versionCode\":" + versioncode +
//            ",\"releaseName\":\"" + name + "\"" +
//            "}")
//    bw.flush()
//    bw.close()
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'org.jsoup:jsoup:1.7.3'
    implementation 'com.squareup.okhttp3:okhttp:4.4.0'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    // 内存泄漏检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}
